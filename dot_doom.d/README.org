#+TITLE: Doom Config
#+PROPERTY: header-args :tangle config.el

* User

#+BEGIN_SRC emacs-lisp
(setq user-full-name "Tim kleinschmidt"
      user-mail-address "tim.kleinschmidt@gmail.com")
#+END_SRC

* Theme

#+BEGIN_SRC emacs-lisp
(setq doom-theme 'doom-palenight)
#+END_SRC

* Fonts

Settings related to fonts within Doom Emacs:

+ ‘doom-font’ – standard monospace font that is used for most things in Emacs.
+ ‘doom-variable-pitch-font’ – variable font which is useful in some Emacs plugins.
+ ‘doom-big-font’ – used in doom-big-font-mode; useful for presentations.
+ ‘font-lock-comment-face’ – for comments.
+ ‘font-lock-keyword-face’ – for keywords with special significance, like ‘for’ and ‘if’ in C.


#+BEGIN_SRC emacs-lisp
(setq doom-font (font-spec :family "JetBrains Mono" :size 12 :line-spacing 1.2)
      doom-variable-pitch-font (font-spec :family "JetBrains Mono")
      doom-big-font (font-spec :family "JetBrains Mono" :size 20))
(after! doom-themes
  (setq doom-themes-enable-bold t
        doom-themes-enable-italic t))
(custom-set-faces!
  '(font-lock-comment-face :slant italic)
  '(font-lock-keyword-face :slant italic))
#+END_SRC

* LINE SETTINGS

#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type nil)
#+END_SRC

* Misc editor settings

#+BEGIN_SRC emacs-lisp
(add-hook 'window-setup-hook #'toggle-frame-maximized)
(add-to-list 'auto-mode-alist '("\\.tpl\\'" . web-mode))
#+END_SRC

* Org Mode

#+BEGIN_SRC emacs-lisp
(setq org-directory "~/Documents/org"
      org-archive-location (concat org-directory ".archive/%s::")
      org-roam-directory (concat org-directory "notes/")
      org-roam-db-location (concat org-roam-directory ".org-roam.db")
      org-journal-encrypt-journal t
      org-journal-file-format "%Y%m%d.org"
      org-hide-emphasis-markers t
      org-startup-folded 'overview)
#+END_SRC

* Magit

#+BEGIN_SRC emacs-lisp
(setq magit-repository-directories '(("~/" . 2))
      magit-save-repository-buffers nil
      transient-values '((magit-commit "--gpg-sign=3F74D3A286A02EED")
                         (magit-rebase "--autosquash" "--gpg-sign=3F74D3A286A02EED")
                         (magit-pull "--rebase" "--gpg-sign=3F74D3A286A02EED")))
#+END_SRC

** Committing Performance
When you initiate a commit, then Magit by default automatically shows a diff of
the changes you are about to commit. For large commits this can take a long
time, which is especially distracting when you are committing large amounts of
generated data which you don’t actually intend to inspect before committing.
This behavior can be turned off using: Then you can type C-c C-d to show the
diff when you actually want to see it, but only then. Alternatively you can
leave the hook alone and just type C-g in those cases when it takes too long to
generate the diff. If you do that, then you will end up with a broken diff
buffer, but doing it this way has the advantage that you usually get to see the
diff, which is useful because it increases the odds that you spot potential
issues.
https://magit.vc/manual/magit/Performance.html

#+begin_src emacs-lisp
(remove-hook 'server-switch-hook 'magit-commit-diff)
#+end_src

* ClojureScript

#+BEGIN_SRC emacs-lisp
(setq cider-boot-parameters "dev --cider"
      clojure-align-forms-automatically t)

(defun clojurescript-mode-before-save-hook ()
  (interactive)
  (when (eq major-mode 'clojurescript-mode)
    (indent-region (point-min) (point-max))))

(add-hook 'before-save-hook #'clojurescript-mode-before-save-hook)
#+END_SRC

* Disable Formatter


#+begin_src emacs-lisp
(setq-hook! 'yaml-mode-hook +format-with-lsp nil)
#+end_src

* Colors

This makes identifiers more identifiable without to activate select them.

#+begin_src emacs-lisp
(add-hook 'prog-mode-hook #'rainbow-identifiers-mode)
#+end_src


* Wakatime

#+begin_src emacs-lisp
(use-package wakatime-mode :ensure t)
(global-wakatime-mode)
#+end_src

set shell=/bin/bash
set nocompatible
filetype off

set encoding=utf-8

set rtp+=~/.vim/bundle/vundle

call vundle#begin()

" Package Manager
Plugin 'gmarik/vundle'
" Status line
Plugin 'bling/vim-airline'
" Git integration
Plugin 'tpope/vim-fugitive'
" Super searching
Plugin 'kien/ctrlp.vim'
" File Browsing
Plugin 'scrooloose/nerdtree'
" Syntax Checking/Highlighting
Plugin 'scrooloose/syntastic'
" Code Folding
Plugin 'tmhedberg/SimpylFold'
" Base16 Theme
Plugin 'chriskempson/base16-vim'
" Editorconfig support
Plugin 'editorconfig/editorconfig-vim'
" To have livestyle support
Plugin 'mattn/livestyle-vim'

Plugin 'klen/python-mode'
Plugin 'davidhalter/jedi-vim'

Plugin 'mattn/emmet-vim'

Plugin 'wting/rust.vim'

call vundle#end()  

filetype plugin indent on

" The rest of your config follows here

" Powerline setup
set laststatus=2

" Nerdtree setup
map <C-n> :NERDTreeToggle<CR>

" Python Mode setup
" Activate rope
" Keys:
" K             Show python docs
"   Rope autocomplete
" g     Rope goto definition
" d     Rope show documentation
" f     Rope find occurrences
" b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)
let g:pymode_rope = 0

" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'

"Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"
" Auto check on save
let g:pymode_lint_write = 1

" Support virtualenv
let g:pymode_virtualenv = 1

" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_key = 'b'

" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
let g:pymode_folding = 0


" Other settigns

" Use l to toggle display of whitespace
nmap l :set list!
" And set some nice chars to do it with
set listchars=tab:»\ ,eol:¬

" automatically change window's cwd to file's dir
set autochdir

" I'm prefer spaces to tabs
set tabstop=4
set shiftwidth=4
set expandtab

set background=dark
try
    colorscheme base16-eighties
    let base16colorspace=256
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" Css autocomplete
autocmd FileType css set omnifunc=csscomplete#CompleteCSS

" Theme
syntax enable
" Enable 256 colors
set t_Co=256

" Split config
set splitbelow
set splitright

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
